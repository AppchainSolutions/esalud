{"version":3,"file":"helper-DiILlF-8.js","sources":["../../../resources/js/api.js","../../../resources/js/crud.js","../../../resources/js/helper.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const get = async (url, data) => {\n    try {\n        const result = await axios.get(url, { params: { data } });\n        return result;\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const post = async (endpoint, data) => {\n    try {\n        const result = await axios.post(endpoint, { data });\n        return result;\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const put = async (endpoint, data) => {\n    try {\n        const result = await axios.post(endpoint, {\n            ...data,\n            _method: \"PUT\",\n        });\n        if (result) {\n            return result;\n        }\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const remove = async (endpoint, id) => {\n    try {\n        const result = await axios.post(endpoint, {\n            params: {\n                id,\n                _method: \"DELETE\",\n            },\n        });\n        if (result) {\n            return result;\n        }\n    } catch (errors) {\n        return errors;\n    }\n};\n\n/**\n * Makes a GET request to the specified URL with the given search query.\n * @param {string} searchUrl - The URL to send the request to.\n * @param {object} searchQuery - The query parameters to filter the results.\n * @returns {Promise<object>} - The response data or an error object.\n */\nexport const search = async (searchUrl, searchQuery) => {\n    if (typeof searchUrl !== \"string\" || !searchUrl) {\n        throw new Error(\"Invalid search URL\");\n    }\n    if (typeof searchQuery !== \"object\" || searchQuery === null) {\n        throw new Error(\"Invalid search query\");\n    }\n    try {\n        const response = await axios.get(searchUrl, {\n            params: { filters: searchQuery },\n        });\n        return response.data; // Return only the data portion of the response\n    } catch (error) {\n        console.error(\"Error during search:\", error); // Log the error for debugging\n        throw new Error(\"Search request failed\"); // Throw a new error with a custom message\n    }\n};","import { get, put, remove, search, post } from './api';\n\nexport const showItem = async (url, data) => {\n    return await get(url, data);\n}\n\nexport const storeItem = async (endpoint, data) => {\n    return await post(endpoint, data)\n}\n\nexport const updateItem = async (updateUrl, data) => {\n    return await put(updateUrl, data)\n}\n\nexport const deleteItem = async (endpoint, id) => {\n    return await remove(endpoint, id)\n}\n\nexport const editItem = async (updateUrl, item) => {\n    return await updateItem(updateUrl, item)\n}\n\nexport const searchItem = async (updateUrl, item) => {\n    return await search(updateUrl, item)\n}\n\n\n","import Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport { searchItem, storeItem, deleteItem, editItem, showItem } from \"@/crud\";\nimport { useNotification } from \"@kyvg/vue3-notification\";\nimport { useDataStore } from \"@/store.js\";\nimport { nextTick } from \"vue\";\n\nconst store = useDataStore();\nconst { notify } = useNotification();\n\n//**********\\\\\\\\ METHODS ////*************/\n\nexport const fetchData = async (endpoints) => {\n    const fetches = endpoints.map(async (endpoint) => {\n        const endpointUrl = \"/secundaria/\" + endpoint;\n        try {\n            const response = await axios.get(endpointUrl);\n            return {\n                endpointUrl,\n                data: response.data.result,\n                endpoint,\n            };\n        } catch (error) {\n            return { endpoint, data: null };\n        }\n    });\n\n    let variable = [];\n\n    return await Promise.allSettled(fetches).then((response) => {\n        const dataByVariable = [];\n        response.forEach(({ value }) => {\n            variable = value.endpoint;\n            dataByVariable[variable] = value.data;\n        });\n        return dataByVariable;\n    });\n};\n\nexport const handleStoreItem = async (state) => {\n    try {\n        const item = { ...state.editedItem };\n        item.paciente_id = store.selected.id;\n        await storeItem(state.urlStore, item);\n        notify({ text: \"Datos almacenados exitosamente.\", type: \"success\" });\n    } catch (error) {\n        console.error(error);\n        notify({\n            text: \"Se produjo un error, por favor revise que los datos sean correctos.\",\n            type: \"error\",\n        });\n    }\n};\n/**\n * Handles the editing of an item.\n *\n * @param {string} route - The route to update the item.\n * @param {object} editedItem - The edited item.\n * @returns {Promise} - A promise that resolves with the updated item.\n * @throws {Error} - If there is an error updating the item.\n */\nexport const handleEditItem = async (state) => {\n    try {\n        const itemToEdit = { ...state.editedItem };\n        const url = state.urlUpdate;\n        notify({\n            title: \"Informacion importante.\",\n            text: \"El registro, ha sido correctamente actualizado.\",\n            type: \"info\",\n        });\n        return await editItem(url, itemToEdit);\n    } catch (error) {\n        notify({\n            title: \"Error.\",\n            text: \"Error al actualizar el registro: \",\n            type: \"error\",\n        });\n        console.error(error);\n    }\n};\n/**\n * Handles the removal of an item.\n *\n * @param {string} route - The endpoint route.\n * @param {object} state - The state object.\n * @param {object} item - The item to be removed.\n * @returns {Promise<void>} - A promise that resolves when the item is successfully removed.\n */\nexport const handleRemoveItem = async (state, item) => {\n    try {\n        Swal.fire({\n            title: \"Eliminación de registro\",\n            text: \"Procederá a eliminar un registro permanentemente.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"En otra ocasión\",\n            confirmButtonText: \"Continuar\",\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const id = item.id;\n                const url = state.urlDelete;\n                const result = await deleteItem(url, id);\n                if (result.status === 200) {\n                    state.editedIndex = state.tableItems.indexOf(item);\n                    state.editedItem = { ...item };\n                    state.tableItems.splice(state.editedIndex, 1);\n                    notify({\n                        text: \"El registro ha sido eliminado.\",\n                        type: \"success\",\n                    });\n                    nextTick(() => {\n                        state.editedItem = { ...state.defaultItem };\n                        state.editedIndex = -1;\n                    });\n                } else {\n                    Swal.fire({\n                        title: \"Error.\",\n                        text: result.response.data.message,\n                        icon: \"error\",\n                        showConfirmButton: false,\n                        timer: 2000,\n                    });\n                }\n            }\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};\n/**\n * Retrieves an item from the specified endpoint using the provided ID.\n *\n * @param {string} route - The endpoint to retrieve the item from.\n * @param {number} id - The ID of the item to retrieve.\n * @returns {Promise<any>} - A promise that resolves to the retrieved item.\n */\nexport const handleShowItem = async (state) => {\n    const url = state.urlShow;\n    const filter = state.searchQuery;\n    state.loadingSearch = true;\n    try {\n        const result = await showItem(url, filter);\n        setResponse(state, result);\n    } catch (error) {\n        notify({\n            title: \"Error.\",\n            text: error,\n            type: \"error\",\n        });\n    }\n    state.loadingSearch = false;\n};\n/**\n * Handles the search for an item.\n *\n * @param {string} searchUrl - The URL for the search.\n * @param {string} searchQuery - The query to search for.\n * @returns {Promise} - A promise that resolves with the search response.\n * @throws {Error} - If an error occurs during the search.\n */\nexport const handleSearchItem = async (state) => {\n    const filter = state.searchQuery;\n    const url = state.urlSearch;\n    state.loadingSearch = true;\n    try {\n        const result = await searchItem(url, filter);\n        setResponse(state, result);\n    } catch (error) {\n        notify({\n            title: \"Error.\",\n            text: \"Se produjo un error.\",\n            type: \"error\",\n        });\n        console.error(error);\n        state.tableItems = [];\n    }\n    state.loadingSearch = false;\n};\n\nasync function setResponse(state, result) {\n    const count = result.data.length;\n    \n    if (count > 0) {\n        notify({\n            title: \"Aviso.\",\n            text: `Se encontraron ${count} registros.`,\n            type: \"success\",\n        });\n        state.formItems = { ...result.data };\n        console.log(state.formItems);\n        if (state.endpoints) {\n            state.tableItems = addValue(state, result.data);\n        } else {\n            state.tableItems = result.data;\n        }\n    } else {\n        notify({\n            title: \"Aviso.\",\n            text: `No se encontraron registros.`,\n            type: \"warning\",\n        });\n        state.tableItems = [];\n    }\n}\n/**\n * Adds matching item descriptions to the given result data.\n *\n * @param {Object} state - The state object containing a `list` property with endpoint arrays and an `endpoints` property with endpoint names.\n * @param {Object} result - The result object containing a `data` property with an array of items.\n * @returns {Array|null} - The final result with matching item descriptions added, or null if the result data is empty.\n */\nexport const addValue = (state, result) => {\n    // Check if the result data is empty\n    if (!result.length) {\n        return null;\n    }\n\n    // Helper function to get matching item description\n    const getMatchingItem = (campo, id) => {\n        const matchingItem = state.list[campo].find((col) => col.id === id);\n        if (!matchingItem) return null;\n        return { id: matchingItem.id, descripcion: matchingItem.descripcion };\n    };\n\n    // Map over each item in the result data\n    const finalResult = result.map((item) => {\n        // Create a copy of the item using the spread operator\n        const updatedItem = { ...item };\n\n        // Iterate over each endpoint in the state object\n        state.endpoints.forEach((campo) => {\n            // Check if the endpoint exists in the state object and if the item has a value for that endpoint\n            if (state.list[campo] && updatedItem[campo]) {\n                // Get the matching item's description\n                const matchingItemDescription = getMatchingItem(\n                    campo,\n                    updatedItem[campo]\n                );\n\n                // If a matching item's description is found, update the item's property value with the description\n                if (matchingItemDescription) {\n                    updatedItem[campo] = matchingItemDescription;\n                }\n            }\n        });\n\n        // Return the updated item\n        return updatedItem;\n    });\n\n    // Return the final result with all items updated\n    return finalResult;\n};\n\nexport const closeForm = (state) => {\n    state.dialog = false;\n    nextTick(() => {\n        state.editedItem = { ...state.defaultItem };\n        state.editedIndex = -1;\n    });\n};\n\nexport const openToCreate = (state) => {\n    state.editedItem = { ...state.defaultItem };\n    state.editedIndex = -1;\n    state.dialog = true;\n};\n\nexport const openToEdit = (state, item) => {\n    if (state.endpoints) {\n        const recordsArray = Object.values(state.formItems);\n        const record = recordsArray.find((rec) => rec.id === item.id);\n        edit(record);\n    } else {\n        const record = item;\n        edit(record);\n    }\n\n    function edit(record) {\n        try {\n            const index = state.tableItems.indexOf(item);\n            const editedItemCopy = { ...record };\n            state.editedIndex = index;\n            // const edItem = Object.assign({}, record);\n            //console.log(Object.assign({}, record));\n            state.editedItem = editedItemCopy;\n            state.dialog = true;\n        } catch (error) {\n            console.error(error);\n        }\n    }\n};\n\nexport const validationRules = (value) => {\n    const rutRules = [\n        (value) => (value ? true : \"Se necesita el rut.\"),\n\n        (value) =>\n            value.length <= 10\n                ? true\n                : \"El rut no puede ser mayor a 11 caracteres\",\n\n        (value) => {\n            const regex = /^[0-9]+[-|‐]{1}[0-9kK]{1}$/;\n            if (!regex.test(value)) {\n                return false;\n            }\n\n            // Separar el número y el dígito verificador\n            let [num, dv] = value.split(\"-\");\n\n            // Calcular el dígito verificador esperado\n            let m = 0,\n                s = 1;\n            for (; num; num = Math.floor(num / 10)) {\n                s = (s + (num % 10) * (9 - (m++ % 6))) % 11;\n            }\n            let dvEsperado = s ? s - 1 : \"k\";\n\n            return dv == dvEsperado ? true : \"El rut es incorrecto\";\n        },\n    ];\n\n    return { rutRules };\n};\n"],"names":["axios","result"],"mappings":"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"}