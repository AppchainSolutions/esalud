name: Deploy Municipalidad CB to Server

on:
  push:
    branches:
      - muniCB-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection..."
          ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "echo 'SSH connection successful'"
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            set -e
            echo "Starting deployment..."
            if [ ! -d "/var/www/municb/.git" ]; then
              echo "Creating directory and cloning repository..."
              sudo mkdir -p "/var/www/municb"
              sudo chown ${{ secrets.REMOTE_USER }}:www-data "/var/www/municb"
              # git clone --single-branch --branch muniCB-deploy git@github.com:AppchainSolutions/esalud.git /var/www/municb
              # git clone -b muniCB-deploy git@github.com:AppchainSolutions/esalud.git /var/www/municb
              git clone -b muniCB-deploy https://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@github.com/AppChainSolutions/esalud.git $REPO_DIR
                else
              echo "Setting permissions for .git directory..."
              sudo chown -R ${{ secrets.REMOTE_USER }}:www-data /var/www/municb/.git
              echo "Pulling latest changes..."
              cd /var/www/municb
              git pull origin muniCB-deploy
            fi
            cd /var/www/municb

            echo "Setting environment variables..."
            cp .env.deploy .env

            # Asignar la propiedad de las carpetas al usuario del servidor web
            sudo chown -R ${{ secrets.REMOTE_USER }}:www-data /var/www/municb
            
            # Asignar permisos de lectura y escritura a las carpetas necesarias
            sudo chmod -R 775 /var/www/municb/storage
            sudo chmod -R 775 /var/www/municb/bootstrap/cache
            
            # Asegurarse de que los archivos tengan los permisos adecuados
            sudo find /var/www/municb/ -type f -exec chmod 644 {} \;
            
            # Asegurarse de que las carpetas tengan los permisos adecuados
            sudo find /var/www/municb -type d -exec chmod 755 {} \;
            
            # Asegurarse de que el archivo .env tenga los permisos adecuados
            sudo chown ${{ secrets.REMOTE_USER }}:www-data /var/www/municb/.env
            sudo chmod 664 /var/www/municb/.env
            
            # Instalar dependencias de Composer
            echo "Installing Composer production dependencies..."
            composer install --no-dev --working-dir=/var/www/municb
            
            # Ejecutar comandos de Artisan para optimizar la aplicaciÃ³n
            echo "Running Artisan commands..."
            php /var/www/municb/artisan config:cache
            php /var/www/municb/artisan route:cache
            php /var/www/municb/artisan view:cache
            
            # echo "Running migrations"
            # php /var/www/municb/artisan migrate --force
            
            echo "Clearing cache and optimizing..."
            php /var/www/municb/artisan optimize:clear
            php /var/www/municb/artisan optimize
            
            echo "Clearing authentication files..."
            php /var/www/municb/artisan auth:clear
            
            echo "Clearing temporary files..."
            rm -rf /var/www/municb/storage/framework/cache/*
            rm -rf /var/www/municb/storage/framework/sessions/*
            rm -rf /var/www/municb/storage/framework/views/*
            rm -rf /var/www/municb/storage/clockwork/*
            
            echo "Clearing log files..."
            rm -rf /var/www/municb/storage/logs/*
            
            echo "Cleanup complete!"
            
            du -h --max-depth=1

            echo "Deployment completed successfully."
            
            EOF