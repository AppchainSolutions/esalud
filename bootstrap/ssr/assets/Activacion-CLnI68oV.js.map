{"version":3,"file":"Activacion-CLnI68oV.js","sources":["../../../resources/js/Pages/Paciente/Activacion.vue"],"sourcesContent":["<template>\n    <v-container fluid fill-height class=\"login-container\">\n        <v-row align=\"center\" justify=\"center\">\n            <v-col cols=\"12\" sm=\"8\" md=\"4\">\n                <v-card elevation=\"12\" class=\"pa-6\">\n                    <v-card-title class=\"text-center\">\n                        <h2 class=\"text-h4 font-weight-bold primary--text\">\n                            Activación de Cuenta\n                        </h2>\n                    </v-card-title>\n\n                    <v-card-subtitle class=\"text-center mb-4\">\n                        Configura tu contraseña para acceder a tu cuenta\n                    </v-card-subtitle>\n\n                    <v-alert\n                        v-if=\"props.error\"\n                        type=\"error\"\n                        class=\"mb-4\"\n                        closable\n                    >\n                        {{ props.error }}\n                    </v-alert>\n\n                    <v-form @submit.prevent=\"submit\" ref=\"activacionForm\">\n                        <v-text-field\n                            v-model=\"form.password\"\n                            :append-icon=\"\n                                showPassword ? 'mdi-eye' : 'mdi-eye-off'\n                            \"\n                            :type=\"showPassword ? 'text' : 'password'\"\n                            @click:append=\"showPassword = !showPassword\"\n                            :rules=\"passwordRules\"\n                            label=\"Contraseña\"\n                            required\n                            @input=\"validatePassword\"\n                        >\n                            <template v-slot:append>\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <v-icon v-bind=\"attrs\" v-on=\"on\">\n                                            mdi-help-circle\n                                        </v-icon>\n                                    </template>\n                                    <div>\n                                        <strong\n                                            >Requisitos de Contraseña:</strong\n                                        >\n                                        <ul class=\"pl-4\">\n                                            <li>Mínimo 12 caracteres</li>\n                                            <li>\n                                                Incluir mayúsculas y minúsculas\n                                            </li>\n                                            <li>Contener números</li>\n                                            <li>Usar caracteres especiales</li>\n                                        </ul>\n                                        <p class=\"mt-2 text-caption\">\n                                            Una contraseña fuerte protege tu\n                                            información personal\n                                        </p>\n                                    </div>\n                                </v-tooltip>\n                            </template>\n                        </v-text-field>\n\n                        <v-text-field\n                            v-model=\"form.password_confirmation\"\n                            :append-icon=\"\n                                showConfirmPassword ? 'mdi-eye' : 'mdi-eye-off'\n                            \"\n                            :type=\"showConfirmPassword ? 'text' : 'password'\"\n                            @click:append=\"\n                                showConfirmPassword = !showConfirmPassword\n                            \"\n                            :rules=\"confirmPasswordRules\"\n                            label=\"Confirmar Contraseña\"\n                            required\n                            clearable\n                            @input=\"validatePassword\"\n                        ></v-text-field>\n\n                        <v-progress-linear\n                            :value=\"passwordStrength.strength * 20\"\n                            :color=\"passwordStrengthColor\"\n                            height=\"7\"\n                            class=\"my-3\"\n                        ></v-progress-linear>\n\n                        <v-expand-transition>\n                            <v-alert\n                                v-if=\"passwordStrength.strength < 3\"\n                                type=\"warning\"\n                                dense\n                                outlined\n                                class=\"mb-4\"\n                            >\n                                {{ passwordStrength.message }}\n                            </v-alert>\n                        </v-expand-transition>\n\n                        <v-list\n                            v-if=\"passwordStrength.strength < 5\"\n                            dense\n                            class=\"py-0\"\n                        >\n                            <v-list-item\n                                v-for=\"(\n                                    requirement, index\n                                ) in passwordRequirements\"\n                                :key=\"index\"\n                                :color=\"requirement.met ? 'success' : 'error'\"\n                                class=\"px-0\"\n                            >\n                                <v-list-item-content>\n                                    <v-list-item-title\n                                        class=\"d-flex justify-space-between align-center\"\n                                    >\n                                        {{ requirement.text }}\n                                        <v-icon\n                                            :color=\"\n                                                requirement.met\n                                                    ? 'success'\n                                                    : 'error'\n                                            \"\n                                            class=\"ml-2\"\n                                        >\n                                            {{\n                                                requirement.met\n                                                    ? \"mdi-check-circle\"\n                                                    : \"mdi-close-circle\"\n                                            }}\n                                        </v-icon>\n                                    </v-list-item-title>\n                                </v-list-item-content>\n                            </v-list-item>\n                        </v-list>\n\n                        <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn\n                                type=\"submit\"\n                                color=\"primary\"\n                                :disabled=\"!isFormValid\"\n                                block\n                                variant=\"tonal\"\n                            >\n                                Activar Cuenta\n                            </v-btn>\n                        </v-card-actions>\n                    </v-form>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script setup>\nimport { ref, computed, reactive } from \"vue\";\nimport { router } from \"@inertiajs/vue3\";\n\nconst props = defineProps({\n    token: {\n        type: String,\n        required: true,\n    },\n    email: {\n        type: String,\n        required: true,\n    },\n    error: {\n        type: String,\n        default: null\n    }\n});\n\nconst form = reactive({\n    token: props.token,\n    email: props.email,\n    password: '',\n    password_confirmation: ''\n});\n\nconst showPassword = ref(false);\nconst showConfirmPassword = ref(false);\n\nconst passwordStrength = computed(() => {\n    const password = form.password;\n    let strength = 0;\n\n    // Criterios de complejidad\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const hasSpecialChar = /[@$!%*?&]/.test(password);\n    const minLength = password.length >= 12;\n\n    // Calcular fuerza de contraseña\n    if (hasLowercase) strength++;\n    if (hasUppercase) strength++;\n    if (hasNumber) strength++;\n    if (hasSpecialChar) strength++;\n    if (minLength) strength++;\n\n    return {\n        strength: strength,\n        message:\n            strength < 3\n                ? \"Contraseña débil\"\n                : strength < 5\n                ? \"Contraseña moderada\"\n                : \"Contraseña fuerte\",\n    };\n});\n\nconst passwordRequirements = reactive([\n    {\n        text: \"Mínimo 12 caracteres\",\n        met: computed(() => form.password.length >= 12),\n    },\n    {\n        text: \"Incluir mayúsculas y minúsculas\",\n        met: computed(\n            () => /[A-Z]/.test(form.password) && /[a-z]/.test(form.password)\n        ),\n    },\n    {\n        text: \"Contener números\",\n        met: computed(() => /[0-9]/.test(form.password)),\n    },\n    {\n        text: \"Usar caracteres especiales\",\n        met: computed(() =>\n            /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(form.password)\n        ),\n    },\n]);\n\nconst passwordStrengthColor = computed(() => {\n    switch (passwordStrength.value.strength) {\n        case 0:\n            return \"error\";\n        case 1:\n            return \"warning\";\n        case 2:\n            return \"warning\";\n        case 3:\n            return \"success\";\n        case 4:\n            return \"success\";\n        case 5:\n            return \"success\";\n        default:\n            return \"error\";\n    }\n});\n\nconst validatePassword = () => {\n    const password = form.password;\n    let strength = 0;\n\n    // Longitud\n    if (password.length >= 12) strength++;\n\n    // Complejidad\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasNumbers = /[0-9]/.test(password);\n    const hasSpecialChars = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(\n        password\n    );\n\n    if (hasUppercase && hasLowercase) strength++;\n    if (hasNumbers && hasSpecialChars) strength++;\n\n    passwordStrength.value = strength;\n};\n\nconst passwordRules = [\n    (v) => !!v || \"La contraseña es requerida\",\n    (v) => v.length >= 12 || \"La contraseña debe tener al menos 12 caracteres\",\n];\n\nconst confirmPasswordRules = [\n    (v) => !!v || \"Confirmar contraseña es requerido\",\n    (v) => v === form.password || \"Las contraseñas no coinciden\",\n];\n\nconst isFormValid = computed(() => {\n    return (\n        form.password === form.password_confirmation &&\n        form.password.length >= 12 &&\n        passwordStrength.value.strength >= 3\n    );\n});\n\nconst submit = () => {\n    console.log(form);\n    router.post(route('paciente.activacion.completar'), form, {\n    onSuccess: () => {\n      // Notificación de éxito\n      console.log('Cuenta activada exitosamente');\n      // Redirigir al dashboard o mostrar mensaje\n    },\n    onError: (errors) => {\n      console.error('Errores de activación:', errors);\n      // Manejar errores específicos\n      if (errors.password) {\n        // Mostrar mensaje de error de contraseña\n        console.error(errors.password);\n      }\n      if (errors.token) {\n        // Mostrar mensaje de error de token\n        console.error(errors.token);\n      }\n    }\n  });\n};\n</script>\n\n<style scoped>\n.login-container {\n    background-color: #f5f5f5;\n    height: 100vh;\n}\n</style>\n"],"names":[],"mappings":"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}