{"version":3,"file":"FormSchemaPage-d7isgCxr.js","sources":["../../../resources/js/Pages/SubPages/FormSchemaPage.vue"],"sourcesContent":["<script setup>\nimport AppLayout from \"../../Layouts/AppLayout.vue\";\n\nimport { onMounted, ref } from \"vue\";\nimport { useLogger } from \"vue-logger-plugin\";\nimport { useForm } from \"vee-validate\";\nimport { usePage, router } from \"@inertiajs/vue3\";\nimport { useDataStore } from \"@/store\";\n\ndefineOptions({ layout: AppLayout });\n\nconst page = usePage();\nconst store = useDataStore();\n\n/* const { handleSubmit, handleReset } = useForm({\n    validationSchema: {\n        name(value) {\n            if (value?.length >= 2) return true;\n\n            return \"Name needs to be at least 2 characters.\";\n        },\n        phone(value) {\n            if (/^[0-9-]{7,}$/.test(value)) return true;\n\n            return \"Phone number needs to be at least 7 digits.\";\n        },\n        email(value) {\n            if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true;\n\n            return \"Must be a valid e-mail.\";\n        },\n    },\n}); */\n\nconst isValid = ref(false);\n\nconst logger = useLogger();\n\nconst formItems = ref([]);\nlet endpoints = ref([]);\n\nconst item = ref({});\n\nonMounted(async () => {\n    try {\n        formItems = page.props.data;\n/* \n        formItems.forEach((formItem) => {\n            const { endpoint } = formItem;\n            if (endpoint) {\n                logger.info(\"Processing form endpoint:\", endpoint);\n                const formattedEndpoint = endpoint;\n                logger.log(\"Formatted endpoint:\", formattedEndpoint);\n                const endpointData = store.endpoints[formattedEndpoint];\n                logger.log(\"Endpoint data:\", endpointData);\n            }\n        }); */\n    } catch (error) {\n        logger.error(\"Error loading form items:\", error);\n    }\n});\n\nfunction getComponentType(type) {\n    switch (type) {\n        case \"text\":\n            return \"v-text-field\";\n        case \"number\":\n            return \"v-text-field\";\n        case \"email\":\n            return \"v-text-field\";\n        case \"password\":\n            return \"v-text-field\";\n        case \"switch\":\n            return \"v-switch\";\n        case \"select\":\n            return \"v-select\";\n        case \"date\":\n            return \"v-text-field\";\n        case \"title-h2\":\n            return \"h2\";\n        default:\n            return \"v-text-field\";\n    }\n}\n\n/**\n * Groups the form items by row and returns an array of row objects.\n *\n * If no form items are present, an empty array is returned.\n *\n * @return {Array} Array of row objects, each containing an array of form items.\n */\nfunction getRows() {\n    console.log(formItems)\n\n    /* if (!formItems) return [];\n    return formItems.value.reduce((rows, item) => {\n        if (!rows[item.row]) {\n            rows[item.row] = [];\n        }\n        rows[item.row].push(item);\n\n        return rows;\n    }, {}); */\n}\nfunction volver() {\n    router.get(\"/paciente\"); // O\n}\nfunction storeForm(items) {\n    logger.log(\"Form items:\", Object.values(formItems.value));\n}\n</script>\n\n<template>\n    <v-container fluid>\n        <v-card>\n            <v-card-title>\n                <v-toolbar flat>\n                    <div class=\"text-h4 ma-4 pa-4\">\n                        {{ page.props.title }}\n                    </div>\n                </v-toolbar>\n            </v-card-title>\n\n            <v-card-text>\n                <form @submit.prevent=\"submit\">\n                    <v-container fluid class=\"ma-4 pa-4\">\n                        <template\n                            v-for=\"(row, rowIndex) in getRows()\"\n                            :key=\"rowIndex\"\n                        >\n                            <v-row>\n                                <v-col\n                                    v-for=\"item in row\"\n                                    :key=\"item.name\"\n                                    :cols=\"12\"\n                                    :lg=\"2\"\n                                    :class=\"'ma-2'\"\n                                >\n                                    <component\n                                        :is=\"getComponentType(item.type)\"\n                                        v-bind:name=\"item.name\"\n                                        v-bind:label=\"item.label\"\n                                        v-bind:type=\"item.type\"\n                                        v-bind:density=\"item.density\"\n                                        v-bind:input-type=\"item.inputType\"\n                                        v-bind:variant=\"item.variant\"\n                                        v-bind:class=\"item.class\"\n                                        v-bind:chips=\"item.chips\"\n                                        v-bind:multiple=\"item.multiple\"\n                                        v-bind:clearable=\"!item.clearable\"\n                                        v-bind:inset=\"item.inset\"\n                                        v-bind:color=\"item.color || []\"\n                                        v-bind:items=\"item.items\"\n                                        v-bind:item-title=\"'descripcion'\"\n                                        v-bind:item-value=\"'id'\"\n                                        v-model=\"item.value\"\n                                    >\n                                    </component>\n                                </v-col>\n                            </v-row>\n                        </template>\n                    </v-container>\n                    <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn\n                            color=\"blue-darken-1\"\n                            variant=\"tonal\"\n                            @click=\"volver\"\n                        >\n                            Volver\n                        </v-btn>\n\n                        <v-btn\n                            class=\"me-4\"\n                            type=\"submit\"\n                            color=\"blue-darken-1\"\n                            variant=\"tonal\"\n                            :disabled=\"isValid\"\n                            @click=\"storeForm()\"\n                        >\n                            Grabar\n                        </v-btn>\n                    </v-card-actions>\n                </form>\n            </v-card-text>\n        </v-card>\n    </v-container>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA,UAAM,OAAO,QAAS;AACR,iBAAY;AAsB1B,UAAM,UAAU,IAAI,KAAK;AAEzB,UAAM,SAAS,UAAW;AAE1B,UAAM,YAAY,IAAI,EAAE;AACR,QAAI,CAAE,CAAA;AAET,QAAI,CAAE,CAAA;AAEnB,cAAU,YAAY;AAClB,UAAI;AACA,oBAAY,KAAK,MAAM;AAAA,MAY1B,SAAQ,OAAO;AACZ,eAAO,MAAM,6BAA6B,KAAK;AAAA,MACvD;AAAA,IACA,CAAC;AAED,aAAS,iBAAiB,MAAM;AAC5B,cAAQ,MAAI;AAAA,QACR,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX;AACI,iBAAO;AAAA,MACnB;AAAA,IACA;AASA,aAAS,UAAU;AACf,cAAQ,IAAI,SAAS;AAAA,IAWzB;AACA,aAAS,SAAS;AACd,aAAO,IAAI,WAAW;AAAA,IAC1B;AACA,aAAS,UAAU,OAAO;AACtB,aAAO,IAAI,eAAe,OAAO,OAAO,UAAU,KAAK,CAAC;AAAA,IAC5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}