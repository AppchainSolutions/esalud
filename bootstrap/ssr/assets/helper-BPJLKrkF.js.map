{"version":3,"file":"helper-BPJLKrkF.js","sources":["../../../resources/js/api.js","../../../resources/js/crud.js","../../../resources/js/logger.js","../../../resources/js/axiosConfig.js","../../../resources/js/helper.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const get = async (url, data) => {\n    try {\n        const result = await axios.get(url, { params: { data } });\n        return result;\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const post = async (endpoint, data) => {\n    try {\n        const result = await axios.post(endpoint, { data });\n        return result;\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const put = async (endpoint, data) => {\n    try {\n        const result = await axios.put(endpoint, { data });\n        if (result) {\n            return result;\n        }\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const remove = async (endpoint, id) => {\n    try {\n        const result = await axios.delete(endpoint, { params: { id } });\n        if (result) {\n            return result;\n        }\n    } catch (errors) {\n        return errors;\n    }\n};\n\nexport const search = async (searchUrl, searchQuery) => {\n    try {\n        const result = await axios.get(searchUrl, {\n            params: {\n                filters: searchQuery,\n            },\n        });\n        return result;\n    } catch (errors) {\n        return errors;\n    }\n};\n","import { get, put, remove, search, post } from './api';\n\nexport const showItem = async (url, data) => {\n    return await get(url, data);\n}\n\nexport const storeItem = async (endpoint, data) => {\n    return await post(endpoint, data)\n}\n\nexport const updateItem = async (updateUrl, data) => {\n    return await put(updateUrl, data)\n}\n\nexport const deleteItem = async (endpoint, id) => {\n    return await remove(endpoint, id)\n}\n\nexport const editItem = async (updateUrl, item) => {\n    return await updateItem(updateUrl, item)\n}\n\nexport const searchItem = async (updateUrl, item) => {\n    return await search(updateUrl, item)\n}\n\n\n","import { createLogger } from \"vue-logger-plugin\";\n\n// Logger configuration options\nconst logger = createLogger({\n    enabled: true,\n    level: \"debug\",\n    showConsoleColors: true,\n});\nexport default logger;\n","import axios from \"axios\";\n\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\n//const baseURL = process.env.NODE_ENV === 'local' ? 'http://localhost:8000' : 'https://municb.appchain.solutions';\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://localhost:8000\",\n    // Otras configuraciones de Axios\n});\n\n//// before a request is made start the nprogress\n//axiosInstance.interceptors.request.use(config => {\n//  NProgress.start()\n//  return config\n//})\n//\n//// before a response is returned stop nprogress\n//axiosInstance.interceptors.response.use(response => {\n//  NProgress.done()\n//  return response\n//})\n\nexport default axiosInstance;\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n//  import Echo from 'laravel-echo';\n\n//import Pusher from 'pusher-js';\n// window.Pusher = Pusher;\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: import.meta.env.VITE_PUSHER_APP_KEY,\n//     cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',\n//     wsHost: import.meta.env.VITE_PUSHER_HOST ? import.meta.env.VITE_PUSHER_HOST : `ws-${import.meta.env.VITE_PUSHER_APP_CLUSTER}.pusher.com`,\n//     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\n//     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\n//     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\n//     enabledTransports: ['ws', 'wss'],\n// });\n","import Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport { storeItem, deleteItem, editItem, showItem } from \"@/crud\";\nimport { get } from \"@/api\";\nimport { useNotification } from \"@kyvg/vue3-notification\";\nimport { nextTick } from \"vue\";\nimport logger from \"./logger.js\";\nimport axiosConfig from \"./axiosConfig.js\";\n\nconst { notify } = useNotification();\n\n//**********\\\\\\\\ METHODS ////*************/\n\nexport const fetchAllData = async (endpoints) => {\n    const fetches = endpoints.map(async (endpoint) => {\n        const endpointUrl = \"api/\" + endpoint;\n        try {\n            const response = await get(endpointUrl);\n            return {\n                endpointUrl,\n                data: response.data.result,\n                endpoint,\n            };\n        } catch (error) {\n            notify({\n                type: \"error\",\n                message: `Failed to fetch data from ${endpointUrl}`,\n            });\n            logger.error(`Error fetching data from ${endpointUrl}:`, error);\n\n            return { endpoint, data: null };\n        }\n    });\n\n    let variable = [];\n\n    return await Promise.allSettled(fetches).then((response) => {\n        const dataByVariable = [];\n        response.forEach(({ value }) => {\n            variable = value.endpoint;\n            dataByVariable[variable] = value.data;\n        });\n        return dataByVariable;\n    });\n};\n\nexport const handleStoreItem = async (state) => {\n    try {\n        await storeItem(state.urlCreate, state.editedItem);\n        notify({ text: \"Datos almacenados exitosamente.\", type: \"success\" });\n    } catch (error) {\n        console.log(error);\n        notify({\n            text: \"Se produjo un error, por favor revise que los datos sean correctos.\",\n            type: \"error\",\n        });\n    }\n};\n/**\n * Handles the editing of an item.\n *\n * @param {string} route - The route to update the item.\n * @param {object} editedItem - The edited item.\n * @returns {Promise} - A promise that resolves with the updated item.\n * @throws {Error} - If there is an error updating the item.\n */\nexport const handleEditItem = async (state) => {\n    try {\n        const itemToEdit = { ...state.editedItem };\n        const url = state.urlUpdate;\n        notify({\n            title: \"Informacion importante.\",\n            text: \"El registro, ha sido correctamente actualizado.\",\n            type: \"info\",\n        });\n        return await editItem(url, itemToEdit);\n    } catch (error) {\n        notify({\n            title: \"Error.\",\n            text: \"Error al actualizar el registro: \",\n            type: \"error\",\n        });\n        console.error(error);\n    }\n};\n/**\n * Handles the removal of an item.\n *\n * @param {string} route - The endpoint route.\n * @param {object} state - The state object.\n * @param {object} item - The item to be removed.\n * @returns {Promise<void>} - A promise that resolves when the item is successfully removed.\n */\nexport const handleRemoveItem = async (state, item) => {\n    try {\n        Swal.fire({\n            title: \"Eliminación de registro\",\n            text: \"Procederá a eliminar un registro permanentemente.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"En otra ocasión\",\n            confirmButtonText: \"Continuar\",\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                const id = item.id;\n                const url = state.urlDelete;\n                const result = await deleteItem(url, id);\n                if (result.status === 200) {\n                    state.editedIndex = state.tableItems.indexOf(item);\n                    state.editedItem = { ...item };\n                    state.tableItems.splice(state.editedIndex, 1);\n                    notify({\n                        text: \"El registro ha sido eliminado.\",\n                        type: \"success\",\n                    });\n                    nextTick(() => {\n                        state.editedItem = { ...state.defaultItem };\n                        state.editedIndex = -1;\n                    });\n                } else {\n                    Swal.fire({\n                        title: \"Error.\",\n                        text: result.response.data.message,\n                        icon: \"error\",\n                        showConfirmButton: false,\n                        timer: 2000,\n                    });\n                }\n            }\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};\n/**\n * Retrieves an item from the specified endpoint using the provided ID.\n *\n * @param {string} route - The endpoint to retrieve the item from.\n * @param {number} id - The ID of the item to retrieve.\n * @returns {Promise<any>} - A promise that resolves to the retrieved item.\n */\nexport const handleSearchItem = async (filter, route) => {\n    const urlRoute = \"api/\" + route + \"/search\";\n    const urlFilter = filter;\n    try {\n        const result = await axiosConfig.get(urlRoute, {\n            params: {\n                data: urlFilter,\n            },\n        });\n        logger.info(\"response\", result.status);\n        return result.data.result;\n    } catch (error) {\n        logger.error(\"Error retrieving item:\", error);\n        notify({\n            title: \"Error al obtener los datos.\",\n            text: error,\n            type: \"error\",\n        });\n    }\n};\n\nasync function setResponse(state, result) {\n    const count = result.data.length;\n    if (count > 0) {\n        notify({\n            title: \"Aviso.\",\n            text: `Se encontraron ${count} registros.`,\n            type: \"success\",\n        });\n        state.formItems = { ...result.data };\n        if (state.endpoints) {\n            state.tableItems = addValue(state, result.data);\n        } else {\n            state.tableItems = result.data;\n        }\n    } else {\n        notify({\n            title: \"Aviso.\",\n            text: `No se encontraron registros.`,\n            type: \"warning\",\n        });\n        state.tableItems = [];\n    }\n}\n\n/**\n * Adds matching item descriptions to the given result data.\n *\n * @param {Object} state - The state object containing a `list` property with endpoint arrays and an `endpoints` property with endpoint names.\n * @param {Object} result - The result object containing a `data` property with an array of items.\n * @returns {Array|null} - The final result with matching item descriptions added, or null if the result data is empty.\n */\nexport const addValue = (state, result) => {\n    // Check if the result data is empty\n    if (!result.length) {\n        return null;\n    }\n\n    // Helper function to get matching item description\n    const getMatchingItem = (campo, id) => {\n        const matchingItem = state.list[campo].find((col) => col.id === id);\n        if (!matchingItem) return null;\n        return { id: matchingItem.id, descripcion: matchingItem.descripcion };\n    };\n\n    // Map over each item in the result data\n    const finalResult = result.map((item) => {\n        // Create a copy of the item using the spread operator\n        const updatedItem = { ...item };\n\n        // Iterate over each endpoint in the state object\n        state.endpoints.forEach((campo) => {\n            // Check if the endpoint exists in the state object and if the item has a value for that endpoint\n            if (state.list[campo] && updatedItem[campo]) {\n                // Get the matching item's description\n                const matchingItemDescription = getMatchingItem(\n                    campo,\n                    updatedItem[campo],\n                );\n\n                // If a matching item's description is found, update the item's property value with the description\n                if (matchingItemDescription) {\n                    updatedItem[campo] = matchingItemDescription;\n                }\n            }\n        });\n\n        // Return the updated item\n        return updatedItem;\n    });\n\n    // Return the final result with all items updated\n    return finalResult;\n};\n\nexport const closeForm = (state) => {\n    state.dialog = false;\n    nextTick(() => {\n        state.editedItem = { ...state.defaultItem };\n        state.editedIndex = -1;\n    });\n};\n\nexport const openToCreate = (state) => {\n    state.editedItem = { ...state.defaultItem };\n    console.log(state.editedItem);\n    state.editedIndex = -1;\n    state.dialog = true;\n};\n\nexport const openToEdit = (state, item) => {\n    if (state.endpoints.length > 0) {\n        const recordsArray = Object.values(state.formItems);\n        const record = recordsArray.find((rec) => rec.id === item.id);\n        edit(record);\n    } else {\n        const record = item;\n        edit(record);\n    }\n\n    function edit(record) {\n        try {\n            const index = state.tableItems.indexOf(item);\n            const editedItemCopy = { ...record };\n            state.editedIndex = index;\n            state.editedItem = editedItemCopy;\n            state.dialog = true;\n        } catch (error) {\n            notify({\n                type: \"error\",\n                message: `Error ${error}`,\n            });\n        }\n    }\n};\n\nexport const validationRules = (value) => {\n    const rutRules = [\n        (value) => (value ? true : \"Se necesita el rut.\"),\n\n        (value) =>\n            value.length <= 10\n                ? true\n                : \"El rut no puede ser mayor a 11 caracteres\",\n\n        (value) => {\n            const regex = /^[0-9]+[-|‐]{1}[0-9kK]{1}$/;\n            if (!regex.test(value)) {\n                return false;\n            }\n\n            // Separar el número y el dígito verificador\n            let [num, dv] = value.split(\"-\");\n\n            // Calcular el dígito verificador esperado\n            let m = 0,\n                s = 1;\n            for (; num; num = Math.floor(num / 10)) {\n                s = (s + (num % 10) * (9 - (m++ % 6))) % 11;\n            }\n            let dvEsperado = s ? s - 1 : \"k\";\n\n            return dv == dvEsperado ? true : \"El rut es incorrecto\";\n        },\n    ];\n\n    return { rutRules };\n};\n"],"names":["result","axiosConfig"],"mappings":"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"}