{"version":3,"file":"chartjs-plugin-autocolors.esm-6jWw44QN.js","sources":["../../../node_modules/@kurkle/color/dist/color.esm.js","../../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../../node_modules/chart.js/dist/chart.js","../../../node_modules/vue-chartjs/dist/index.js","../../../node_modules/chartjs-plugin-autocolors/dist/chartjs-plugin-autocolors.esm.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","/*!\n * chartjs-plugin-autocolors v0.2.2\n * https://github.com/kurkle/chartjs-plugin-autocolors#readme\n * (c) 2023 Jukka Kurkela <jukka.kurkela@gmail.com>\n * Released under the MIT license\n */\nimport { hsv2rgb, rgbString } from '@kurkle/color';\n\nfunction* hueGen() {\n  yield 0;\n  while (true) {\n    for (let i = 1; i < 10; i++) {\n      const d = 1 << i;\n      for (let j = 1; j <= d; j += 2) {\n        yield j / d;\n      }\n    }\n  }\n}\n\nfunction* colorGen(repeat = 1) {\n  const hue = hueGen();\n  let h = hue.next();\n  while (!h.done) {\n    let rgb = hsv2rgb(Math.round(h.value * 360), 0.6, 0.8);\n    for (let i = 0; i < repeat; i++) {\n      yield {background: rgbString({r: rgb[0], g: rgb[1], b: rgb[2], a: 192}), border: rgbString({r: rgb[0], g: rgb[1], b: rgb[2], a: 144})};\n    }\n    rgb = hsv2rgb(Math.round(h.value * 360), 0.6, 0.5);\n    for (let i = 0; i < repeat; i++) {\n      yield {background: rgbString({r: rgb[0], g: rgb[1], b: rgb[2], a: 192}), border: rgbString({r: rgb[0], g: rgb[1], b: rgb[2], a: 144})};\n    }\n    h = hue.next();\n  }\n}\n\nfunction setColors(dataset, background, border) {\n  dataset.backgroundColor = dataset.backgroundColor || background;\n  dataset.borderColor = dataset.borderColor || border;\n  return dataset.backgroundColor === background && dataset.borderColor === border;\n}\n\nfunction getNext(color, customize, context) {\n  const c = color.next().value;\n  if (typeof customize === 'function') {\n    return customize(Object.assign({colors: c}, context));\n  }\n  return c;\n}\n\nvar index = {\n  id: 'autocolors',\n  beforeUpdate(chart, args, options) {\n    const {mode = 'dataset', enabled = true, customize, repeat} = options;\n\n    if (!enabled) {\n      return;\n    }\n\n    const gen = colorGen(repeat);\n\n    if (options.offset) {\n      // offset the color generation by n colors\n      for (let i = 0; i < options.offset; i++) {\n        gen.next();\n      }\n    }\n\n    if (mode === 'label') {\n      return labelMode(chart, gen, customize);\n    }\n\n    const datasetMode = mode === 'dataset';\n\n    let c = getNext(gen, customize, {chart, datasetIndex: 0, dataIndex: datasetMode ? undefined : 0});\n    for (const dataset of chart.data.datasets) {\n      if (datasetMode) {\n        if (setColors(dataset, c.background, c.border)) {\n          c = getNext(gen, customize, {chart, datasetIndex: dataset.index});\n        }\n      } else {\n        const background = [];\n        const border = [];\n        for (let i = 0; i < dataset.data.length; i++) {\n          background.push(c.background);\n          border.push(c.border);\n          c = getNext(gen, customize, {chart, datasetIndex: dataset.index, dataIndex: i});\n        }\n        setColors(dataset, background, border);\n      }\n    }\n  }\n};\n\nfunction labelMode(chart, gen, customize) {\n  const colors = {};\n  for (const dataset of chart.data.datasets) {\n    const label = dataset.label ?? '';\n    if (!colors[label]) {\n      colors[label] = getNext(gen, customize, {chart, datasetIndex: 0, dataIndex: undefined, label});\n    }\n    const c = colors[label];\n    setColors(dataset, c.background, c.border);\n  }\n}\n\nexport { index as default };\n//# sourceMappingURL=chartjs-plugin-autocolors.esm.js.map\n"],"names":["round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","cur","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","loop","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","found","convertObjectDataToArray","meta","iScale","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","mode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","indexAxis","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","count","_stacked","sorted","prev","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","PieController","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","bounds","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","mouseX","mouseY","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","previous","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","pt","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","CommonProps","A11yProps","Props","compatProps","internals","toRawIfProxy","isProxy","toRaw","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","defineComponent","param","expose","slots","canvasRef","ref","chartRef","shallowRef","renderChart","clonedData","proxiedData","destroyChart","update","onMounted","onUnmounted","watch","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","nextTick","createTypedChart","registerables","reforwardRef","Bar","Doughnut","Pie","hueGen","colorGen","repeat","setColors","background","getNext","customize","gen","labelMode","datasetMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}