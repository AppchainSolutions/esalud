name: Deploy Municipalidad CB to Server

on:
  push:
    branches:
      - muniCB-deploy

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "echo 'SSH connection successful'"

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
          set -e
          echo "Starting deployment..."
          if [ ! -d "/var/www/municb/.git" ]; then
            echo "Creating directory and cloning repository..."
            sudo mkdir -p /var/www/municb
            sudo chown ${{ secrets.REMOTE_USER }}:www-data /var/www/municb
            git clone git@github.com:AppchainSolutions/esalud.git /var/www/municb
          else
            echo "Setting permissions for .git directory..."
            sudo chown -R ${{ secrets.REMOTE_USER }}:www-data /var/www/municb/.git
            echo "Pulling latest changes..."
            cd /var/www/municb
            git pull origin muni-deploy
          fi

          # cd /var/www/municb

          # Establece variables de entorno
          # echo "Setting environment variables..."
          # echo APP_NAME=Vulco
          # echo APP_ENV=production
          # echo APP_KEY=base64:yB91h0NIlVel0QLDQnKvdOHpIKqEexzsbv8JUQglzWw=
          # echo APP_DEBUG=true
          # echo APP_URL=https://vulco.appchain.solutions
          # echo LOG_CHANNEL=stack
          # echo LOG_DEPRECATIONS_CHANNEL=null
          # echo LOG_LEVEL=debug
          # echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          # echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          # echo "DB_PORT=3306" >> .env
          # echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          # echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          # echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

          # Asignar la propiedad de las carpetas al usuario del servidor web
          # echo "Setting permissions..."
          # sudo chown -R ${{ secrets.REMOTE_USER }}:www-data /var/www/municb
          # sudo chmod -R 775 /var/www/municb/storage
          # sudo chmod -R 775 /var/www/municb/bootstrap/cache
          # sudo find /var/www/municb -type f -exec chmod 644 {} \;
          # sudo find /var/www/municb -type d -exec chmod 755 {} \;
          # sudo chown ${{ secrets.REMOTE_USER }}:www-data /var/www/municb/.env
          # sudo chmod 664 /var/www/municb/.env

          # Ejecutar comandos de Artisan para optimizar la aplicaci√≥n
          # echo "Running Artisan commands..."
          # php artisan migrate --force
          # php artisan config:cache
          # php artisan route:cache
          # php artisan view:cache

          # echo "Deployment completed successfully."
        EOF